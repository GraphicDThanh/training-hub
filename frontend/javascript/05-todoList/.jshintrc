{
  // force all vars name to use either camelStyle style or UPPER_CASE with underscores
  "camelcase":true,

  // requires putting curly braces around blocks in loops and conditionals
  "curly":true,

  // wrapping parentheses assists readers of your code in understanding that the expression is the result of a function, and not the function itself.
  "immed":true,
  "indent":2,

  // requires capitalizing names of constructor functions
  "newcap":true,

  // prohibits the use of unary increment and decrement operators.
  "plusplus":false,

  // prohibits the use of explicitly undeclared variables
  "undef":true,

  // warns when you define and never use your variables
  "unused":true,

  
  // requires all functions to run in ECMAScript 5's strict mode
  "strict":true,
  "trailing":true,

  // lets you set the max number of formal parameters allowed per function
  "maxparams":3,

  // lets you control how nested do you want your blocks to be
  "maxdepth":3,

  // suppresses warnings about missing semicolons
  "asi":true,

  // suppresses warnings about the debugger statements in code.
  "debug":true,

  // suppresses warnings about == null comparisons
  "eqnull":true,

  // suppresses warnings about the use of expressions where normally you would expect to see assignments or function calls
  "expr":true,

  // suppresses warnings about missing semicolons, but only when the semicolon is omitted for the last statement in a one-line block
  "lastsemic":true,

  // suppresses most of the warnings about possibly unsafe line breakings in your code
  "laxbreak":true,

  // suppresses warnings about comma-first coding style
  "laxcomma":true,

  // suppresses warnings about multi-line strings
  "multistr":true,

  // suppresses warnings about variable shadowing i.e. declaring a variable that had been already declared somewhere in the outer scope.
  "shadow":false,

  // suppresses warnings about using [] notation when it can be expressed in dot notation
  "sub":true,

  "supernew":true, // suppresses warnings about "weird" constructions like new function () { ... } and new Object;

  // defines globals that are usually used for logging poor-man's debugging: console, alert, etc.
  "devel":true
}